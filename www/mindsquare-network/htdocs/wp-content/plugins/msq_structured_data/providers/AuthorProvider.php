<?php

class AuthorProvider extends DataProvider {
	const PROVIDED_OBJECT = 'author';

	public function get($id = null, $imageSize = null) {
		if (!isset($id)) return null;

		$author = [
			'@type' => 'Person',
			'name'  => $this->getName($id),
			'url' => $this->getUrl($id),
			'description' => $this->getDescription($id)
		];

		$avatarUrl = ImageProvider::getAvatarUrl($id, $imageSize);

		if (!empty($avatarUrl)) {
			$author['image'] = ImageProvider::formatImage($avatarUrl, $imageSize, $imageSize);
		}

		return $author;
	}

	public function getName($id = null) {
		if (!isset($id)) return null;

		return get_the_author_meta('display_name', $id);
	}

	public static function getEmail($id = null) {
		if (!isset($id)) return null;

		return get_the_author_meta('user_email', $id);
	}

	public function getUrl($id = null) {
		if (!isset($id)) return null;

		if( get_current_blog_id() != 37 ) {
			$authordetails = get_posts(array(
				'post_type' => 'authordetails',
				'post_status' => 'publish',
				'meta_key' => 'meta_box_author_id',
				'meta_value' => $id
			));
			if( !empty( $authordetails ) ) {
				return get_permalink( reset( $authordetails ) );
			}
		}

		return get_author_posts_url($id);
	}

	public function getDescription($id = null) {
		if (!isset($id)) return null;

		return get_the_author_meta('description', $id);
	}

	protected function initializePlaceholder( WpmPlaceholder &$placeholder ) {
		parent::initializePlaceholder( $placeholder ); // TODO: Change the autogenerated stub
		$placeholder->initParameter( 'image-size', 96, 'MSQ_SD_Utils::validateNumber' );
	}
}